Script started on Mon 09 Jan 2023 05:25:18 PM UTC
]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# python ImageClassifier/train.py ImageClassifier/flowers --arch vgg19 --apo[K[K[Kepochs 4
===========================================================================================
Loading data from the directory: ImageClassifier/flowers
Successfully loaded the data!
===========================================================================================
==============================================================================================
Building the Model || Architecture: vgg19 || Hidden units: 512
Downloading: "https://download.pytorch.org/models/vgg19-dcbb9e9d.pth" to /root/.torch/models/vgg19-dcbb9e9d.pth
  0%|                                                                                     | 0/574673361 [00:00<?, ?it/s]  1%|▌                                                                | 4907008/574673361 [00:00<00:11, 49055390.18it/s]  3%|█▉                                                              | 17186816/574673361 [00:00<00:09, 59834660.44it/s]  5%|███                                                             | 28016640/574673361 [00:00<00:07, 69101492.77it/s]  7%|████▎                                                           | 38273024/574673361 [00:00<00:07, 76588057.32it/s]  9%|█████▌                                                          | 49717248/574673361 [00:00<00:06, 85025105.11it/s] 11%|██████▊                                                         | 61390848/574673361 [00:00<00:05, 92565931.74it/s] 13%|████████▏                                                       | 73367552/574673361 [00:00<00:05, 99331493.21it/s] 15%|█████████▎                                                     | 84893696/574673361 [00:00<00:04, 103616102.03it/s] 17%|██████████▍                                                    | 95600640/574673361 [00:00<00:04, 104241556.73it/s] 19%|███████████▌                                                  | 107536384/574673361 [00:01<00:04, 108351427.28it/s] 21%|████████████▉                                                 | 119390208/574673361 [00:01<00:04, 111193798.97it/s] 23%|██████████████                                                | 130678784/574673361 [00:01<00:04, 100515910.73it/s] 25%|███████████████▍                                               | 141041664/574673361 [00:01<00:04, 96797123.17it/s] 27%|████████████████▌                                             | 152952832/574673361 [00:01<00:04, 102550165.91it/s] 28%|█████████████████▋                                            | 163618816/574673361 [00:01<00:03, 103734587.49it/s] 31%|██████████████████▉                                           | 176046080/574673361 [00:01<00:03, 109131933.37it/s] 33%|████████████████████▎                                         | 188612608/574673361 [00:01<00:03, 113602511.90it/s] 35%|█████████████████████▋                                        | 201203712/574673361 [00:01<00:03, 117018840.59it/s] 37%|███████████████████████                                       | 213581824/574673361 [00:01<00:03, 118957971.38it/s] 39%|████████████████████████▎                                     | 225861632/574673361 [00:02<00:02, 120079457.13it/s] 41%|█████████████████████████▋                                    | 238116864/574673361 [00:02<00:02, 120788153.43it/s] 44%|███████████████████████████                                   | 250560512/574673361 [00:02<00:02, 121849099.03it/s] 46%|████████████████████████████▍                                 | 263012352/574673361 [00:02<00:02, 122622971.79it/s] 48%|█████████████████████████████▋                                | 275308544/574673361 [00:02<00:02, 119013578.07it/s] 50%|███████████████████████████████                               | 287498240/574673361 [00:02<00:02, 119839336.63it/s] 52%|████████████████████████████████▎                             | 299941888/574673361 [00:02<00:02, 121168269.05it/s] 54%|█████████████████████████████████▋                            | 312483840/574673361 [00:02<00:02, 122407722.72it/s] 57%|███████████████████████████████████                           | 324968448/574673361 [00:02<00:02, 123108275.64it/s] 59%|████████████████████████████████████▍                         | 337412096/574673361 [00:02<00:01, 123500015.41it/s] 61%|█████████████████████████████████████▋                        | 349855744/574673361 [00:03<00:01, 123779242.49it/s] 63%|███████████████████████████████████████                       | 362242048/574673361 [00:03<00:01, 123613430.41it/s] 65%|████████████████████████████████████████▍                     | 374611968/574673361 [00:03<00:01, 103340544.27it/s] 67%|█████████████████████████████████████████▌                    | 385515520/574673361 [00:03<00:01, 103892755.27it/s] 69%|██████████████████████████████████████████▉                   | 397623296/574673361 [00:03<00:01, 108507235.56it/s] 71%|████████████████████████████████████████████                  | 408805376/574673361 [00:03<00:01, 107640747.02it/s] 73%|█████████████████████████████████████████████▎                | 419807232/574673361 [00:03<00:01, 100352101.31it/s] 75%|███████████████████████████████████████████████▏               | 430112768/574673361 [00:03<00:01, 91842880.82it/s] 76%|████████████████████████████████████████████████▏              | 439623680/574673361 [00:04<00:01, 90143929.12it/s] 78%|█████████████████████████████████████████████████▎             | 449617920/574673361 [00:04<00:01, 92864225.29it/s] 80%|██████████████████████████████████████████████████▍            | 460472320/574673361 [00:04<00:01, 97046769.51it/s] 82%|███████████████████████████████████████████████████▌           | 470360064/574673361 [00:04<00:01, 97262221.57it/s] 84%|████████████████████████████████████████████████████▋          | 480894976/574673361 [00:04<00:00, 99536179.43it/s] 86%|█████████████████████████████████████████████████████         | 491962368/574673361 [00:04<00:00, 102616648.53it/s] 88%|██████████████████████████████████████████████████████▎       | 503029760/574673361 [00:04<00:00, 104901168.59it/s] 89%|███████████████████████████████████████████████████████▍      | 514211840/574673361 [00:04<00:00, 106852079.62it/s] 91%|████████████████████████████████████████████████████████▋     | 525393920/574673361 [00:04<00:00, 108276158.83it/s] 93%|█████████████████████████████████████████████████████████▉    | 536477696/574673361 [00:04<00:00, 109010061.11it/s] 95%|███████████████████████████████████████████████████████████   | 547545088/574673361 [00:05<00:00, 109503895.48it/s] 97%|████████████████████████████████████████████████████████████▎ | 558563328/574673361 [00:05<00:00, 109690116.20it/s] 99%|█████████████████████████████████████████████████████████████▍| 569647104/574673361 [00:05<00:00, 110029281.07it/s]100%|██████████████████████████████████████████████████████████████| 574673361/574673361 [00:05<00:00, 109313558.23it/s]
Model Built successfully!
=============================================================================================================
=============================================================================================================
Training in process || Model: VGG(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): ReLU(inplace)
    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (5): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): ReLU(inplace)
    (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): ReLU(inplace)
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace)
    (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (13): ReLU(inplace)
    (14): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): ReLU(inplace)
    (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (17): ReLU(inplace)
    (18): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (19): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (20): ReLU(inplace)
    (21): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (22): ReLU(inplace)
    (23): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (24): ReLU(inplace)
    (25): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): ReLU(inplace)
    (27): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (28): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (29): ReLU(inplace)
    (30): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (31): ReLU(inplace)
    (32): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (33): ReLU(inplace)
    (34): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (35): ReLU(inplace)
    (36): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (classifier): Sequential(
    (0): Linear(in_features=25088, out_features=512, bias=True)
    (1): ReLU()
    (2): Dropout(p=0.2)
    (3): Linear(in_features=512, out_features=256, bias=True)
    (4): ReLU()
    (5): Dropout(p=0.2)
    (6): Linear(in_features=256, out_features=102, bias=True)
    (7): LogSoftmax()
  )
) || Epochs: 4 || Learning Rate: 0.0025 || GPU: True
Epoch 1/4.. Train loss: 5.023.. Validation loss: 4.321.. Validation accuracy: 0.085
Epoch 1/4.. Train loss: 4.347.. Validation loss: 3.893.. Validation accuracy: 0.129
Epoch 1/4.. Train loss: 4.073.. Validation loss: 3.447.. Validation accuracy: 0.236
Epoch 1/4.. Train loss: 3.719.. Validation loss: 3.097.. Validation accuracy: 0.294
Epoch 1/4.. Train loss: 3.446.. Validation loss: 2.708.. Validation accuracy: 0.361
Epoch 1/4.. Train loss: 3.193.. Validation loss: 2.345.. Validation accuracy: 0.402
Epoch 1/4.. Train loss: 2.937.. Validation loss: 2.197.. Validation accuracy: 0.425
Epoch 1/4.. Train loss: 2.728.. Validation loss: 1.976.. Validation accuracy: 0.477
Epoch 1/4.. Train loss: 2.587.. Validation loss: 1.797.. Validation accuracy: 0.530
Epoch 1/4.. Train loss: 2.533.. Validation loss: 1.683.. Validation accuracy: 0.552
Epoch 2/4.. Train loss: 2.433.. Validation loss: 1.575.. Validation accuracy: 0.574
Epoch 2/4.. Train loss: 2.280.. Validation loss: 1.570.. Validation accuracy: 0.577
Epoch 2/4.. Train loss: 2.261.. Validation loss: 1.479.. Validation accuracy: 0.605
Epoch 2/4.. Train loss: 2.078.. Validation loss: 1.488.. Validation accuracy: 0.581
Epoch 2/4.. Train loss: 2.125.. Validation loss: 1.477.. Validation accuracy: 0.598
Epoch 2/4.. Train loss: 2.033.. Validation loss: 1.374.. Validation accuracy: 0.605
Epoch 2/4.. Train loss: 2.115.. Validation loss: 1.371.. Validation accuracy: 0.622
Epoch 2/4.. Train loss: 2.079.. Validation loss: 1.230.. Validation accuracy: 0.648
Epoch 2/4.. Train loss: 2.013.. Validation loss: 1.167.. Validation accuracy: 0.691
Epoch 2/4.. Train loss: 2.026.. Validation loss: 1.216.. Validation accuracy: 0.664
Epoch 3/4.. Train loss: 1.954.. Validation loss: 1.132.. Validation accuracy: 0.682
Epoch 3/4.. Train loss: 1.824.. Validation loss: 1.097.. Validation accuracy: 0.697
Epoch 3/4.. Train loss: 1.940.. Validation loss: 1.150.. Validation accuracy: 0.672
Epoch 3/4.. Train loss: 1.884.. Validation loss: 1.098.. Validation accuracy: 0.691
Epoch 3/4.. Train loss: 1.853.. Validation loss: 1.111.. Validation accuracy: 0.695
Epoch 3/4.. Train loss: 1.774.. Validation loss: 1.062.. Validation accuracy: 0.705
Epoch 3/4.. Train loss: 1.853.. Validation loss: 1.140.. Validation accuracy: 0.681
Epoch 3/4.. Train loss: 1.893.. Validation loss: 0.952.. Validation accuracy: 0.716
Epoch 3/4.. Train loss: 1.787.. Validation loss: 1.001.. Validation accuracy: 0.725
Epoch 3/4.. Train loss: 1.710.. Validation loss: 1.015.. Validation accuracy: 0.722
Epoch 4/4.. Train loss: 1.798.. Validation loss: 0.910.. Validation accuracy: 0.720
Epoch 4/4.. Train loss: 1.724.. Validation loss: 0.961.. Validation accuracy: 0.729
Epoch 4/4.. Train loss: 1.728.. Validation loss: 0.922.. Validation accuracy: 0.742
Epoch 4/4.. Train loss: 1.575.. Validation loss: 0.943.. Validation accuracy: 0.747
Epoch 4/4.. Train loss: 1.671.. Validation loss: 0.920.. Validation accuracy: 0.730
Epoch 4/4.. Train loss: 1.812.. Validation loss: 0.953.. Validation accuracy: 0.736
Epoch 4/4.. Train loss: 1.670.. Validation loss: 0.898.. Validation accuracy: 0.746
Epoch 4/4.. Train loss: 1.630.. Validation loss: 0.883.. Validation accuracy: 0.739
Epoch 4/4.. Train loss: 1.769.. Validation loss: 0.951.. Validation accuracy: 0.734
Epoch 4/4.. Train loss: 1.663.. Validation loss: 1.002.. Validation accuracy: 0.731
Epoch 4/4.. Train loss: 1.829.. Validation loss: 0.964.. Validation accuracy: 0.725
Model training finished!
======================================================================================================
======================================================================================================
Model validation on the test set
Test loss: 0.130, Test accuracy: 0.044
Model validation done.
============================================================================================
Test loss: 0.218, Test accuracy: 0.094
Model validation done.
============================================================================================
Test loss: 0.299, Test accuracy: 0.148
Model validation done.
============================================================================================
Test loss: 0.417, Test accuracy: 0.189
Model validation done.
============================================================================================
Test loss: 0.464, Test accuracy: 0.251
Model validation done.
============================================================================================
Test loss: 0.552, Test accuracy: 0.305
Model validation done.
============================================================================================
Test loss: 0.590, Test accuracy: 0.374
Model validation done.
============================================================================================
Test loss: 0.658, Test accuracy: 0.430
Model validation done.
============================================================================================
Test loss: 0.691, Test accuracy: 0.498
Model validation done.
============================================================================================
Test loss: 0.719, Test accuracy: 0.567
Model validation done.
============================================================================================
Test loss: 0.856, Test accuracy: 0.607
Model validation done.
============================================================================================
Test loss: 0.961, Test accuracy: 0.654
Model validation done.
============================================================================================
Test loss: 1.048, Test accuracy: 0.707
Model validation done.
============================================================================================
=============================================================================================
Saving the model.
Model saved to checkpoint.pth
=============================================================================================
]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# python ImageClassifier/predict.py my_test_flower.jpg checkpoint.pth --categpry[K[K[Kory_name s cat_to_name.json
Loading checkpoint...
==============================================================================================
Building the Model || Architecture: vgg19 || Hidden units: 512
Model Built successfully!
=============================================================================================================
Traceback (most recent call last):
  File "ImageClassifier/predict.py", line 21, in <module>
    model = model_utility.load_checkpoint(args.checkpoint)
  File "/home/workspace/ImageClassifier/model_utility.py", line 197, in load_checkpoint
    model.load_state_dict(checkpoint['state_dict'])
KeyError: 'state_dict'
]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# python ImageClassifier/predict.py my_test_flower.jpg checkpoint.pth --category_name s cat_to_name.json
Loading checkpoint...
==============================================================================================
Building the Model || Architecture: vgg19 || Hidden units: 512
Model Built successfully!
=============================================================================================================
Checkpoint loaded successfully.
=============================================================================================
VGG(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): ReLU(inplace)
    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (5): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): ReLU(inplace)
    (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): ReLU(inplace)
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace)
    (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (13): ReLU(inplace)
    (14): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): ReLU(inplace)
    (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (17): ReLU(inplace)
    (18): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (19): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (20): ReLU(inplace)
    (21): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (22): ReLU(inplace)
    (23): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (24): ReLU(inplace)
    (25): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): ReLU(inplace)
    (27): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (28): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (29): ReLU(inplace)
    (30): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (31): ReLU(inplace)
    (32): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (33): ReLU(inplace)
    (34): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (35): ReLU(inplace)
    (36): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (classifier): Sequential(
    (0): Linear(in_features=25088, out_features=512, bias=True)
    (1): ReLU()
    (2): Dropout(p=0.2)
    (3): Linear(in_features=512, out_features=256, bias=True)
    (4): ReLU()
    (5): Dropout(p=0.2)
    (6): Linear(in_features=256, out_features=102, bias=True)
    (7): LogSoftmax()
  )
)
Traceback (most recent call last):
  File "ImageClassifier/predict.py", line 26, in <module>
    with open(category_names, 'r') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'cat_to_name.json'
]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# python ImageClassifier/predict.py my_test_flower.jpg checkpoint.pth --category_name s cat_to_name.json[Cj cat_to_name.json[C[C[1P cat_to_name.json[C[C cat_to_name.json[C[CI cat_to_name.json[C[C[Cm cat_to_name.json[C[C[C[Ca cat_to_name.json[C[C[C[C[Cg cat_to_name.json[C[C[C[C[C[Ce cat_to_name.json[C[C[C[C[C[C[CC cat_to_name.json[C[C[C[C[C[C[C[Cl cat_to_name.json[C[C[C[C[C[C[C[C[Ca cat_to_name.json[C[C[C[C[C[C[C[C[C[Cs cat_to_name.json[C[C[C[C[C[C[C[C[C[C[Cs cat_to_name.json[C[C[C[C[C[C[C[C[C[C[C[Ci cat_to_name.json[C[C[C[C[C[C[C[C[C[C[C[C[Cf cat_to_name.json[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci cat_to_name.json[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce cat_to_name.jsonr cat_to_name.json/ cat_to_name.json[C[1P cat_to_name.json/ cat_to_name.json[C[1Pcat_to_name.json
Loading checkpoint...
==============================================================================================
Building the Model || Architecture: vgg19 || Hidden units: 512
Model Built successfully!
=============================================================================================================
Checkpoint loaded successfully.
=============================================================================================
VGG(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): ReLU(inplace)
    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (5): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): ReLU(inplace)
    (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): ReLU(inplace)
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace)
    (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (13): ReLU(inplace)
    (14): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): ReLU(inplace)
    (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (17): ReLU(inplace)
    (18): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (19): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (20): ReLU(inplace)
    (21): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (22): ReLU(inplace)
    (23): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (24): ReLU(inplace)
    (25): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): ReLU(inplace)
    (27): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (28): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (29): ReLU(inplace)
    (30): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (31): ReLU(inplace)
    (32): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (33): ReLU(inplace)
    (34): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (35): ReLU(inplace)
    (36): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (classifier): Sequential(
    (0): Linear(in_features=25088, out_features=512, bias=True)
    (1): ReLU()
    (2): Dropout(p=0.2)
    (3): Linear(in_features=512, out_features=256, bias=True)
    (4): ReLU()
    (5): Dropout(p=0.2)
    (6): Linear(in_features=256, out_features=102, bias=True)
    (7): LogSoftmax()
  )
)
[ 0.49212337]
['prince of wales feathers']
]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# ython ImageClassifier/predict.py my_test_flower.jpg checkpoint.pth --category_names  ImageClassifier/cat_to_name.json
bash: ython: command not found
]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# ython ImageClassifier/predict.py my_test_flower.jpg checkpoint.pth --category_names  ImageClassifier/cat_to_name.json[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cpython ImageClassifier/predict.py my_test_flower.jpg checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C

Loading checkpoint...
==============================================================================================
Building the Model || Architecture: vgg19 || Hidden units: 512
Model Built successfully!
=============================================================================================================
Checkpoint loaded successfully.
=============================================================================================
VGG(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): ReLU(inplace)
    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (5): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): ReLU(inplace)
    (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): ReLU(inplace)
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace)
    (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (13): ReLU(inplace)
    (14): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): ReLU(inplace)
    (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (17): ReLU(inplace)
    (18): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (19): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (20): ReLU(inplace)
    (21): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (22): ReLU(inplace)
    (23): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (24): ReLU(inplace)
    (25): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): ReLU(inplace)
    (27): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (28): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (29): ReLU(inplace)
    (30): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (31): ReLU(inplace)
    (32): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (33): ReLU(inplace)
    (34): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (35): ReLU(inplace)
    (36): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (classifier): Sequential(
    (0): Linear(in_features=25088, out_features=512, bias=True)
    (1): ReLU()
    (2): Dropout(p=0.2)
    (3): Linear(in_features=512, out_features=256, bias=True)
    (4): ReLU()
    (5): Dropout(p=0.2)
    (6): Linear(in_features=256, out_features=102, bias=True)
    (7): LogSoftmax()
  )
)
[ 0.49212337]
['prince of wales feathers']
]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# python ImageClassifier/predict.py my_test_flower.jpg checkpoint.pth --category_name s ImageClassifier/cat_to_name.json[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names [1PImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names I[1PmageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names Im[1PageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names Ima[1PgeClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names Imag[1PeClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names Image[1PClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names ImageC[1Plassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names ImageCl[1Passifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names ImageCla[1Pssifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names ImageClas[C[1Pifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names ImageClass[1Pifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names ImageClassi[1Pfier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names ImageClassif[1Pier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names ImageClassifi[1Per/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names ImageClassifie[1Pr/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names ImageClassifier[1P/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names ImageClassifier/[1Pcat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth --category_names ImageClassifier/c[1Pat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CI checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CC checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cl checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs checkpoint.pth --category_names ImageCla[Csifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cf checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/ checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cf checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cl checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co checkpoint.pth --category_names ImageClassifier/cat_to_name.json[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cw checkpoint.pth --category_nam[4h [4le[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce checkpoint.pth --category_na[4h [4lm[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr checkpoint.pth --category_n[4h [4la[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs checkpoint.pth --category_[4h [4ln[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/ checkpoint.pth --category[4h [4l_[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ct checkpoint.pth --categor[4h [4ly[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce checkpoint.pth --catego[4h [4lr[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs checkpoint.pth --categ[4h [4lo[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ct checkpoint.pth --cate[4h [4lg[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/ checkpoint.pth --cat[4h [4le[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1 checkpoint.pth --ca[4h [4lt[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C8 checkpoint.pth --c[4h [4la[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/ checkpoint.pth --[4h [4lc[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci checkpoint.pth -[4h [4l-[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca checkpoint.pth [C[4h [4l-[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C checkpoint.pth -[C[1P[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm checkpoint.pth [C[4h [4l-[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca checkpoint.pth[4h [4l [A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg checkpoint.pt[4h [4lh[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce checkpoint.p[4h [4lt[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C_ checkpoint.[4h [4lp[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0 checkpoint[4h [4l.[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C4 checkpoin[4h [4lt[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C2 checkpoi[4h [4ln[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C5 checkpo[4h [4li[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C4 checkp[4h [4lo[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C. check[4h [4lp[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cj chec[4h [4lk[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cp che[4h [4lc[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg ch[4h [4le[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

Loading checkpoint...
==============================================================================================
Building the Model || Architecture: vgg19 || Hidden units: 512
Model Built successfully!
=============================================================================================================
Checkpoint loaded successfully.
=============================================================================================
VGG(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): ReLU(inplace)
    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (5): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): ReLU(inplace)
    (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): ReLU(inplace)
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace)
    (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (13): ReLU(inplace)
    (14): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): ReLU(inplace)
    (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (17): ReLU(inplace)
    (18): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (19): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (20): ReLU(inplace)
    (21): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (22): ReLU(inplace)
    (23): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (24): ReLU(inplace)
    (25): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): ReLU(inplace)
    (27): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (28): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (29): ReLU(inplace)
    (30): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (31): ReLU(inplace)
    (32): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (33): ReLU(inplace)
    (34): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (35): ReLU(inplace)
    (36): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (classifier): Sequential(
    (0): Linear(in_features=25088, out_features=512, bias=True)
    (1): ReLU()
    (2): Dropout(p=0.2)
    (3): Linear(in_features=512, out_features=256, bias=True)
    (4): ReLU()
    (5): Dropout(p=0.2)
    (6): Linear(in_features=256, out_features=102, bias=True)
    (7): LogSoftmax()
  )
)
[ 0.1704915]
['bishop of llandaff']
]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# python ImageClassifier/predict.py ImageClassifier/flowers/test/18/image_04254.jpg c heckpoint.pth --category_names ImageClassifier/cat_to_name.json[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.jpg che[1P[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C6.jpg ch[4h [4le[A]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

Loading checkpoint...
==============================================================================================
Building the Model || Architecture: vgg19 || Hidden units: 512
Model Built successfully!
=============================================================================================================
Checkpoint loaded successfully.
=============================================================================================
VGG(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): ReLU(inplace)
    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (5): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): ReLU(inplace)
    (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): ReLU(inplace)
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace)
    (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (13): ReLU(inplace)
    (14): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): ReLU(inplace)
    (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (17): ReLU(inplace)
    (18): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (19): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (20): ReLU(inplace)
    (21): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (22): ReLU(inplace)
    (23): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (24): ReLU(inplace)
    (25): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): ReLU(inplace)
    (27): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (28): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (29): ReLU(inplace)
    (30): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (31): ReLU(inplace)
    (32): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (33): ReLU(inplace)
    (34): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (35): ReLU(inplace)
    (36): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (classifier): Sequential(
    (0): Linear(in_features=25088, out_features=512, bias=True)
    (1): ReLU()
    (2): Dropout(p=0.2)
    (3): Linear(in_features=512, out_features=256, bias=True)
    (4): ReLU()
    (5): Dropout(p=0.2)
    (6): Linear(in_features=256, out_features=102, bias=True)
    (7): LogSoftmax()
  )
)
[ 0.86127681]
['gazania']
]0;root@debc1cc6dcc8: /home/workspace[01;32mroot@debc1cc6dcc8[00m:[01;34m/home/workspace[00m# exit
exit

Script done on Mon 09 Jan 2023 06:14:34 PM UTC
